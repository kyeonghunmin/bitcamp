// 역할 : Singleton 패턴 적용

package step32.exam01;

public abstract class CarFactory {
  // 1) 기본 생성자를 private으로 접근을 제한한다.
  // => 외부에서 생성자를 호출할 수 없기 때문에 결국 외부에서 객체를 생성할 수 없다.
  private CarFactory() {}
  
  // 2) 객체의 주소를 저장할 static 변수를 준비한다.
  static CarFactory instance;
  
  // 3) 객체를 리턴할 static 메서드를 준비한다.
  // 인스턴스를 체크하여 null 이면 만들고, 아니면 기존 instance를 리턴한다.
  public static CarFactory newInstance() throws Exception {
    if (instance == null) {
      String className = System.getProperty("CarFactory");
      Class clazz = Class.forName(className);
      instance = clazz.newInstance();
    }
    return instance;
  }
  
  public abstract Car newCar(String name);
}
