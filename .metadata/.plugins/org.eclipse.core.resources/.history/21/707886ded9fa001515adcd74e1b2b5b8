package step28;

import java.sql.Connection;
import java.sql.DriverManager;

import com.mysql.jdbc.Driver;

public class Test01 {

  public static void main(String[] args) throws Exception {
    DriverManager.deregisterDriver(new Driver());
    
    Connection con = DriverManager.
        getConnection("jdbc:mysql://localhost:3306/java80db?user=java80&password=1111");
    System.out.println("연결 성공!");
    con.close();
  }
}
/* 
# JDBC API
- DBMS와 연동할 때 사용하는 도구들의 규약
- 이 규약에 따라 DBMS 벤더는 클래스를 작성하여 배포한다.
  => "JDBC Driver"라 부른다.
  
- 주요 규약
1) java.sql.Driver 인터페이스
  => JDBC 드라이버 정보를 다루고 커넥션을 준비하는 기능
  => 구현체 
  MySQL JDBC 드라이버 : com.mysql.Driver 클래스
  Oracle JDBC 드라이버 : oracle.jdbc.OracleDriver 클래스
  
2) java.sql.Connection 인터페이스
  => DBMS와 연결 정보를 다루고 
     질의 도구(SQL을 DBMS에 보내는 도구)를 준비하는 기능
  => 구현체 
  MySQL JDBC 드라이버 : com.mysql.ConnectionImpl 클래스
  Oracle JDBC 드라이버 : oracle.jdbc.OracleConnectionWrapper 클래스
  
3) java.sql.Statement 인터페이스
  => DBMS에 질의를 하고 데이터를 가져오는 기능을 선언
  => 구현체
  MySQL JDBC 드라이버 : com.mysql.StatementImpl 클래스 
  (Impl : 인터페이스를 구현하는 클래스)
  Oracle JDBC 드라이버 : oracle.jdbc.OracleConnectionWrapper 클래스

*/