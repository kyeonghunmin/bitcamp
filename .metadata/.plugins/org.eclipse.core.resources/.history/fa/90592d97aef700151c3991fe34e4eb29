package bitcamp.pms.controller;

import java.util.Map;
import java.util.Scanner;

import bitcamp.pms.Dao.MemberDao;
import bitcamp.pms.annotation.Controller;
import bitcamp.pms.domain.Member;
import bitcamp.pms.util.CommandUtil;

@Controller("member/update.do")
public class MemberUpdateController implements MenuController {
  private MemberDao memberDao;
  private Scanner keyScan;

  
  public void setMemberDao(MemberDao memberDao) {
    this.memberDao = memberDao;
  }

  @Override
  public void init() {  // 프로그램을 위한 자원을 준비하는 메서드
  }

  @Override // 추상 메서드를 구현하는 것도 Override이다.
  public void service(Map<String,Object> paramMap) {
    keyScan = (Scanner)paramMap.get("stdin");
    
    try {
    
      System.out.print("변경할 회원 번호는? ");
      int no = Integer.parseInt(keyScan.nextLine());
  
      Member oldMember = memberDao.selectOne(no);
      Member member = new Member();
  
      System.out.printf("이름(%s)? ", oldMember.getName());
      member.setName(keyScan.nextLine());
  
      System.out.printf("이메일(%s)? ", oldMember.getEmail());
      member.setEmail(keyScan.nextLine());
  
      System.out.printf("암호(%s)? ", oldMember.getPassword());
      member.setPassword(keyScan.nextLine());
  
      System.out.printf("전화(%s)? ", oldMember.getTel());
      member.setTel(keyScan.nextLine());
  
      if (CommandUtil.confirm(keyScan, "변경하시겠습니까?")) {
        memberDao.update(no, member);
        System.out.println("변경하였습니다.");
      } else {
        System.out.println("변경을 취소하였습니다.");
      }
      
      
    } catch (Exception e) {
      System.out.println("데이터 처리에 실패했습니다.");
    }
  }

  @Override
  public void destroy() { // 프로그램 종료시 사용했던 자원을 해제하는 메서드
  }
}
