package bitcamp.pms.controller;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Map;
import java.util.Scanner;

import bitcamp.pms.annotation.Component;
import bitcamp.pms.domain.Board;

@Component("board")
public class BoardListController implements MenuController {
  private Scanner keyScan;
  static ArrayList<Board> boards;

  public BoardListController() {
    boards = new ArrayList<>();
  }

  public void load() throws Exception {
    FileReader in1 = new FileReader("board.data");
    BufferedReader in = new BufferedReader(in1);

    String line;
    String[] values;
    Board board;
    while ((line = in.readLine()) != null) {
      values = line.split(",");
      board = new Board();
      board.setTitle(values[0]);
      board.setContent(values[1]);
      board.setViews(Integer.parseInt(values[2]));
      board.setPassword(values[3]);
      board.setCreateDate(Date.valueOf(values[4]));
      
      boards.add(board);
    }

    in.close();
    in1.close();
  }

  @Override
  public void init() {}

  @Override
  public void service(Map<String, Object> paramMap) {
    try {
      this.load();
    } catch (Exception e) {
      throw new RuntimeException("게시판 데이터 로딩 실패!!", e);
    }
  }

  @Override
  public void destroy() {
    try {
      this.save();
    } catch (Exception e) {
    }
  }

  private void doList() {
    for (int i = 0; i < boards.size(); i++) {
      System.out.printf("%d, %s\n", i, boards.get(i).toString());
    }
  }

}
