// @Component가 붙은 클래스에 대해서만 인스턴스를 생성하고 관리한다.
package bitcamp.pms.context;

import java.io.File;
import java.util.HashMap;

import bitcamp.pms.annotation.Component;

public class ApplicationContext3 {
  HashMap<String, Object> objPool = new HashMap<>();
  
  public ApplicationContext3(String basePackage) {
    String path = "./bin/" + basePackage.replace(".", "/");
    createObject(new File(path));
    
  }

  private void createObject(File file) {
    if (file.isFile() && file.getName().endsWith(".class")) {
      String classNameWithPackage = file.getPath()
          .replace(".class", "").replace("./bin/", "").replace("/", ".");
      
      try {
      Class<?> clazz = Class.forName(classNameWithPackage);
      Component anno = clazz.getAnnotation(Component.class);
      if (anno != null) {
        if (anno.equals("")) {
          System.out.println(anno);
//          objPool.put(, value)
        }
      }
      
      
      } catch (Exception e) {}
    }
  }
}
// ./bin/bitcamp/pms/ProjectApp.class