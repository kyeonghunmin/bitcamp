package bitcamp.pms.Dao;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import bitcamp.pms.annotation.Component;
import bitcamp.pms.domain.Board;
import bitcamp.pms.domain.Member;

@Component
public class BoardDao {
  public List<Board> selectList() throws Exception {
    ArrayList<Board> list = new ArrayList<>();
    
    Connection con = null;
    Statement stmt = null;
    ResultSet rs = null;
    
    try {
      Class.forName("com.mysql.jdbc.Driver");
      con = DriverManager.getConnection(
          "jdbc:mysql://localhost:3306/java80db", "java80", "1111");
      stmt = con.createStatement();
      rs = stmt.executeQuery("select * from BOARDS");
      Board board = null;
      
      while (rs.next()) {
        board = new Board();
        board.setNo(rs.getInt("BNO"));
        board.setTitle(rs.getString("TITLE"));
        board.setContent(rs.getString("CONTS"));
        board.setViews(rs.getInt("VWCNT"));
        board.setPassword(rs.getString("PWD"));
        board.setCreatedDate(rs.getDate("CDT"));
        list.add(board);
      }
      return list;
      
    } finally {
      try {rs.close();} catch (Exception e) {}
      try {stmt.close();} catch (Exception e) {}
      try {con.close();} catch (Exception e) {}
    }
  }
  
  public Board selectOne(int no) throws Exception {
    
    Connection con = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;
    
    try {
      Class.forName("com.mysql.jdbc.Driver");
      con = DriverManager.getConnection(
          "jdbc:mysql://localhost:3306/java80db", "java80", "1111");
      stmt = con.prepareStatement("select * from BOARDS where MNO=?");
      stmt.setInt(1,  no);
      rs = stmt.executeQuery();
            
      if (rs.next()) {
        Board board = new Board();
        board.setNo(rs.getInt("BNO"));
        board.setTitle(rs.getString("TITLE"));
        board.setContent(rs.getString("CONTS"));
        board.setViews(rs.getInt("VWCNT"));
        board.setPassword(rs.getString("PWD"));
        board.setCreatedDate(rs.getDate("CDT"));
        return board;
      }
      return null;
      
    } finally {
      try {rs.close();} catch (Exception e) {}
      try {stmt.close();} catch (Exception e) {}
      try {con.close();} catch (Exception e) {}
    }
  }
  
  public int insert(Member member) throws Exception {
    Connection con = null;
    PreparedStatement stmt = null;
    
    try {
      Class.forName("com.mysql.jdbc.Driver");
      con = DriverManager.getConnection(
          "jdbc:mysql://localhost:3306/java80db", "java80", "1111");
      stmt = con.prepareStatement("insert into MEMBERS(MNAME,EMAIL,PWD,TEL)"
          + " values(?,?,?,?)");
      
      stmt.setString(1,  member.getName());
      stmt.setString(2,  member.getEmail());
      stmt.setString(3,  member.getPassword());
      stmt.setString(4,  member.getTel());
      
      return stmt.executeUpdate();
      
    } finally {
      try {stmt.close();} catch (Exception e) {}
      try {con.close();} catch (Exception e) {}
    }
  }
  
  public int update(Member member) throws Exception {
    Connection con = null;
    PreparedStatement stmt = null;
    
    try {
      Class.forName("com.mysql.jdbc.Driver");
      con = DriverManager.getConnection(
          "jdbc:mysql://localhost:3306/java80db", "java80", "1111");
      
      stmt = con.prepareStatement("update MEMBERS set MNAME=?, EMAIL=?, PWD=?, TEL=? where MNO=?");
      
      stmt.setString(1, member.getName());
      stmt.setString(2, member.getEmail());
      stmt.setString(3, member.getPassword());
      stmt.setString(4, member.getTel());
      stmt.setInt(5, member.getNo());
      
      return stmt.executeUpdate();
      
    } finally {
      try {stmt.close();} catch (Exception e) {}
      try {con.close();} catch (Exception e) {}
    }
  }
  
  public int delete(int no) throws Exception {
    Connection con = null;
    PreparedStatement stmt = null;
    
    try {
      Class.forName("com.mysql.jdbc.Driver");
      con = DriverManager.getConnection(
          "jdbc:mysql://localhost:3306/java80db", "java80", "1111");
      
      stmt = con.prepareStatement("delete from MEMBERS where MNO=?");
      stmt.setInt(1,  no);
      return stmt.executeUpdate();
      
      
    } finally { 
      try {stmt.close();} catch (Exception e) {}
      try {con.close();} catch (Exception e) {}
    }
  }
  
