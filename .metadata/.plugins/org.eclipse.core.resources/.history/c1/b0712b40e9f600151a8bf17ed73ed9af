package bitcamp.pms.controller;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import bitcamp.pms.annotation.Component;
import bitcamp.pms.dao.ProjectDao;
import bitcamp.pms.domain.Project;

@Component("project/update.do")
public class ProjectUpdateController implements MenuController {
  ProjectDao projectDao = new ProjectDao();
  private Scanner keyScan;

  @Override
  public void init() {}

  @Override
  public void service(Map<String, Object> paramMap) {
    keyScan = (Scanner) paramMap.get("stdin");
    
    try {
      List<Project> projects = projectDao.load();
  
      System.out.print("변경할 프로젝트 번호?");
      int no = Integer.parseInt(keyScan.nextLine());
  
      Project project = new Project();
  
      System.out.printf("프로젝트명(%s)? ", projects.get(no).getTitle());
      project.setTitle(keyScan.nextLine());
      System.out.printf("시작일(%s)? ", projects.get(no).getStartDate());
      project.setStartDate(Date.valueOf(keyScan.nextLine()));
      System.out.printf("종료일(%s)? ", projects.get(no).getEndDate());
      project.setEndDate(Date.valueOf(keyScan.nextLine()));
      System.out.printf("설명(%s)? ", projects.get(no).getDescription());
      project.setDescription(keyScan.nextLine());
  
      if (confirm("변경하시겠습니까?")) {
        projects.set(no, project);
        System.out.println("변경하였습니다.");
      } else {
        System.out.println("변경을 취소하였습니다.");
      }
      projectDao.save(projects);
    } catch (Exception e) {
      System.out.println("데이터 처리에 실패했습니다.");
      service(paramMap);
    }
  }

  @Override
  public void destroy() {}

  private boolean confirm(String message) {
    while (true) {
      System.out.printf("%s(y/n) ", message);
      String input = keyScan.nextLine().toLowerCase();
      if (input.equals("y")) {
        return true;
      } else if (input.equals("n")) {
        return false;
      } else {
        System.out.println("잘못된 명령어입니다.");
      }
    }
  }
}
